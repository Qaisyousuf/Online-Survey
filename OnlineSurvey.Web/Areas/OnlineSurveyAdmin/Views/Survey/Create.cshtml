@model OnlineSurvey.ViewModel.SurveyViewModel
@{
    Layout = null;
}

@using (Html.BeginForm("Create", "Survey", FormMethod.Post, new { onsubmit = "return SubmitFormCreate(this)" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
   
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="row offset-1">
        <div class="col-lg-6">
            <div class="form-group ">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label " })
                <div class="">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SurveyCatagoryId, htmlAttributes: new { @class = "control-label" })
                <div class="">
                    @Html.DropDownListFor(m => m.SurveyCatagoryId, new SelectList(ViewBag.SurveyCatagory, "Id", "Title"), "-----Select survey catagory ------", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SurveyCatagoryId, "", new { @class = "text-danger" })
                </div>
            </div>
            
        </div>
        <div class="col-lg-6">
            <div class="form-group">
                @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label checkbox-lable" })
                <div class="ui-checkboxradio-checked">
                    @Html.CheckBoxFor(model => model.IsActive, new { htmlAttributes = new { @class = "form-control ui-checkboxradio-checked " }, style = "opacity: 1; padding-top:1px; margin:1px; " })
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.SurveyIdForMultipleChoice, htmlAttributes: new { @class = "control-label" })
                <div class="CheckBox">
                    @Html.ListBoxFor(model => model.SurveyIdForMultipleChoice, new MultiSelectList(ViewBag.QuestionData, "Id", "Type"), new { @class = "form-control" })

                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.MultiLineTextQuestionId, htmlAttributes: new { @class = "control-label" })
                <div class="CheckBox">
                    @Html.ListBoxFor(model => model.MultiLineTextQuestionId, new MultiSelectList(ViewBag.MulitiLineTextQuestion, "Id", "QuestionTitle"), new { @class = "form-control" })

                </div>
            </div>
        </div>
    </div>


    <div class="row">
        <div class="offset-4">
            <div class="form-group">
                <button type="submit" value="Create" class="btn btn-primary btn-rounded btn-md"><i class="fas fa-save pr-2"></i> Save</button>  |
                <button type="reset" value="Reset" class="btn btn-mdb-color btn-rounded btn-md"><i class="fas fa-redo-alt"></i> Reset</button>

            </div>
        </div>
    </div>
</div>
}


