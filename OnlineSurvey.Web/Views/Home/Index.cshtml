@model OnlineSurvey.ViewModel.ListofModels
@{
    ViewBag.Title = ViewBag.PageTitle;
}

@if (Model.PagesViewModel != null)
{



    <div class="container my-5 card">


        <!--Section: Content-->
        <section class="dark-grey-text">

            <div class="row pr-lg-5">
                <div class="col-md-7 mb-4">

                    <div class="view img-fluid">
                        <lottie-player src="@Model.PagesViewModel.AnimationUrlForPage" background="transparent" speed="1" style="width: auto; height: auto;" loop autoplay></lottie-player>
                    </div>

                </div>
                <div class="col-md-5 d-flex align-items-center">
                    <div>
                       
                        <h3 class="font-weight-bold mb-2">@Model.PagesViewModel.Surveies.Name</h3>

                        <p>@Model.PagesViewModel.Content</p>

                    </div>
                </div>
            </div>

        </section>
        <!--Section: Content-->


    </div>


    <div class="container">
        <div class="row">
            <div class="col-md-6 col-sm-12 col-lg-8 offset-md-3 offset-lg-2">
                <div class="card card-cascade narrower">

                    <!-- Card image -->
                    <div class="view view-cascade gradient-card-header blue-gradient" id="gradientColor">

                        <!-- Title -->
                        <h3 class="card-header-title">@Model.PagesViewModel.Surveies.Name</h3>
                        <!-- Subtitle -->
                        <h6 class="mb-0 pb-3 pt-2">@Model.PagesViewModel.Surveies.SurveyCatagories.Type</h6>

                        @foreach (var item in Model.PagesViewModel.Surveies.MultipleChoiceQuestion)
                        {
                          <button class="btn btn-rounded btn-sm">@item.Type</button>
                        }
                        <!-- Facebook -->


                    </div>

                    <!-- Card content -->
                    <div class="card-body card-body-cascade text-center mx-4 my-4">

                        <!-- Text -->
                        <p class="card-text text-justify">
                           @Model.PagesViewModel.Surveies.SurveyCatagories.Content
                        </p>

                    </div>
                    <div class="card-footer " id="cardFooter">
                        @{

                            if (Model.PagesViewModel.Surveies.IsActive == true)
                            {

                                <button class="btn btn-rounded btn-md text-white"><i class="far fa-calendar-alt fa-lg text-primary"></i> Published date @Model.PagesViewModel.Surveies.StartDate </button>
                                <button class="btn btn-rounded btn-md text-white">Survey is on <i class="fas fa-check-circle text-primary fa-lg"></i></button>
                                <a href="/Home/StartSurvey/@Model.PagesViewModel.Surveies.Id" class="btn btn-rounded btn-md text-white"><i class="fas fa-play text-primary fa-lg"></i> Take Survey</a>
                            }
                            else
                            {
                                <button class="btn btn-rounded btn-md text-white"><i class="far fa-calendar-alt fa-lg text-primary"></i> Published date @Model.PagesViewModel.Surveies.StartDate </button>
                                <button class="btn btn-rounded btn-md text-white">Survey is off <i class="fas fa-times-circle text-danger fa-lg"></i></button>
                               

                            }
                        }


                    </div>

                </div>
                @*<div class="card card-cascade">

            <!-- Card image -->
            <div class="view view-cascade gradient-card-header blue-gradient">

                <!-- Title -->
                <h2 class="card-header-title mb-3">@Model.PagesViewModel.Surveies.Name</h2>
                <!-- Subtitle -->
                <p class="card-header-subtitle mb-0">@Model.PagesViewModel.Surveies.SurveyCatagories.Title</p>

            </div>

            <!-- Card content -->
            <div class="card-body card-body-cascade text-center">


                @Model.PagesViewModel.Surveies.IsActive
                @Model.PagesViewModel.Surveies.StartDate
                <hr>

            </div>
            @if (Model.PagesViewModel.Surveies.Id.ToString() != null && Model.PagesViewModel.Id.ToString() != null)
            {
                <a href="Home/CreateSurvey/@Model.PagesViewModel.Surveies.Id" class="btn btn-outline-primary"> Take Survey</a>
            }



        </div>*@
            </div>
        </div>
    </div>
   

}
@*@if (Model.ListOfsurveyViewModel != null)
{

    <div class="container">
        <div class="row">


            @foreach (var item in Model.ListOfsurveyViewModel)
            {
                <div class="col-md-4">
                    <div class="card card-cascade">

                        <!-- Card image -->
                        <div class="view view-cascade gradient-card-header blue-gradient">

                            <!-- Title -->
                            <h2 class="card-header-title mb-1">@item.Name</h2>
                            <!-- Subtitle -->
                            <p class="card-header-subtitle mb-0">@item.SurveyCatagories.Title</p>

                        </div>

                        <!-- Card content -->
                        <div class="card-body card-body-cascade text-center">

                            @item.Name
                            @item.SurveyCatagories.Type
                            @item.SurveyCatagories.Title
                            <hr>

                        </div>
                        <a href="Home/CreateSurvey/@item.SurveyIdForMultipleChoice" class="btn btn-outline-primary"> Take Survey</a>
                    </div>
                </div>

            }

        </div>
    </div>
}*@



@*using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            @if (Model.ListOfsurveyViewModel != null)
            {
                foreach (var item in Model.ListOfsurveyViewModel)
                {
                    <div class="container my-5 py-4 card">


                        <!--Section: Content-->
                        <section class="text-center px-md-5 mx-md-5 dark-grey-text">

                            <h3 class="font-weight-bold mb-4">@item.Name</h3>
                            <h class="font-weight-normal mb-4">@item.SurveyCatagories.Content</h>

                            @if (Model.ListOfsurveyViewModel != null)
                            {

                                <div class="row">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <!--Grid column-->
                                    <div class=" container">


                                        <!--Grid row-->
                                        <div class="row">
                                            <!--Grid column-->
                                            <div class="col-md-4  ">
                                                <div class="md-form mb-0">
                                                    @Html.LabelFor(model => Model.ListUserSurveyViewModel.FirstName, htmlAttributes: new { @class = "control-label  " })
                                                    @Html.EditorFor(model => Model.ListUserSurveyViewModel.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => Model.ListUserSurveyViewModel.FirstName, "", new { @class = "text-danger" })

                                                </div>
                                            </div>
                                            <!--Grid column-->
                                            <!--Grid column-->
                                            <div class="col-md-4 ">
                                                <div class="md-form mb-0">
                                                    @Html.LabelFor(model => Model.ListUserSurveyViewModel.LastName, htmlAttributes: new { @class = "control-label  " })
                                                    @Html.EditorFor(model => Model.ListUserSurveyViewModel.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => Model.ListUserSurveyViewModel.LastName, "", new { @class = "text-danger" })

                                                </div>
                                            </div>
                                            <div class="col-md-4   ">
                                                <div class="md-form mb-0">
                                                    @Html.LabelFor(model => Model.ListUserSurveyViewModel.Email, htmlAttributes: new { @class = "control-label  " })
                                                    @Html.EditorFor(model => Model.ListUserSurveyViewModel.Email, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => Model.ListUserSurveyViewModel.Email, "", new { @class = "text-danger" })

                                                </div>
                                            </div>
                                            <div class="col-md-4  ">
                                                <div class="md-form mb-0">
                                                    @Html.LabelFor(model => Model.ListUserSurveyViewModel.Mobile, htmlAttributes: new { @class = "control-label  " })
                                                    @Html.EditorFor(model => Model.ListUserSurveyViewModel.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => Model.ListUserSurveyViewModel.Mobile, "", new { @class = "text-danger" })

                                                </div>
                                            </div>
                                            <div class="col-md-4  ">
                                                <div class="md-form mb-0">
                                                    @Html.LabelFor(model => Model.ListUserSurveyViewModel.Address, htmlAttributes: new { @class = "control-label  " })
                                                    @Html.EditorFor(model => Model.ListUserSurveyViewModel.Address, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => Model.ListUserSurveyViewModel.Address, "", new { @class = "text-danger" })

                                                </div>
                                            </div>
                                            <div class="col-md-4  ">
                                                <div class="md-form mb-0">
                                                    @Html.LabelFor(model => Model.ListUserSurveyViewModel.CPRNumber, htmlAttributes: new { @class = "control-label  " })
                                                    @Html.EditorFor(model => Model.ListUserSurveyViewModel.CPRNumber, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => Model.ListUserSurveyViewModel.CPRNumber, "", new { @class = "text-danger" })

                                                </div>
                                            </div>
                                            <div class="col-md-4  ">
                                                <div class="md-form mb-0">
                                                    @Html.LabelFor(model => Model.ListUserSurveyViewModel.DOB, htmlAttributes: new { @class = "control-label  " })
                                                    @Html.EditorFor(model => Model.ListUserSurveyViewModel.DOB, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => Model.ListUserSurveyViewModel.DOB, "", new { @class = "text-danger" })

                                                </div>
                                            </div>
                                            <div class="col-md-4  ">
                                                <div class=" md-form mb-0">
                                                    @Html.LabelFor(model => model.ListUserSurveyViewModel.GenderId, htmlAttributes: new { @class = "control-label " })

                                                    @Html.DropDownListFor(m => m.ListUserSurveyViewModel.GenderId, new SelectList(ViewBag.UserGender, "Id", "Name"), "Select your gender", new { @class = "mdb-select" })
                                                    @Html.ValidationMessageFor(model => model.ListUserSurveyViewModel.GenderId, "", new { @class = "text-danger" })

                                                </div>
                                            </div>

                                        </div>


                                    </div>
                                </div>
                            }



                        </section>
                        <!--Section: Content-->


                    </div>
                }


            }

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }*@
}



@section scripts {
    <script>
        $(document).ready(function () {
            $('.mdb-select').materialSelect();
        });
    </script>
    @Scripts.Render("~/bundles/jqueryval")
}





